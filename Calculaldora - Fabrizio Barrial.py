'''
Descripci√≥n del C√≥digo:
Este programa es una calculadora interactiva que permite al usuario elegir entre
siete operaciones aritm√©ticas: suma, resta, multiplicaci√≥n, divisi√≥n normal,
divisi√≥n entera, potencia, y resto de la divisi√≥n (m√≥dulo).

Manejo de Errores:
- Valida que la operaci√≥n seleccionada sea una opci√≥n v√°lida (1-7).
- Valida que los operandos sean n√∫meros v√°lidos (enteros o decimales).
- Maneja espec√≠ficamente la Divisi√≥n por Cero, solicitando un nuevo divisor.
- Permite al usuario realizar m√∫ltiples operaciones de forma continua.

Variables utilizadas:
- **opcion (str):** Almacena la selecci√≥n de la operaci√≥n del usuario. Tipo: string (se convierte a int para la validaci√≥n).
- **num1 (float):** Primer operando (dividendo/base). Tipo: float.
- **num2 (float):** Segundo operando (divisor/exponente). Tipo: float.
- **continuar (str):** Opci√≥n del usuario para seguir usando la calculadora. Tipo: string.
'''

def pedir_operando(mensaje):
    """
    Funci√≥n para solicitar un operando al usuario y validar que sea un n√∫mero.
    Maneja el error de ValueError si el input no puede convertirse a float.
    """
    while True:
        try:
            # Pide datos al usuario y convierte a float (permite decimales)
            numero = float(input(mensaje))
            return numero
        except ValueError:
            # Manejo de input incorrecto
            print("‚ùå ERROR: Input no v√°lido. Por favor, ingrese un n√∫mero (entero o decimal).")


def obtener_operacion():
    """
    Muestra el men√∫ y solicita la opci√≥n de operaci√≥n, validando que sea una
    opci√≥n v√°lida (1 a 7).
    """
    while True:
        print("\n--- üîß MEN√ö DE OPERACIONES ---")
        print("1. Suma (a + b)")
        print("2. Resta (a - b)")
        print("3. Multiplicaci√≥n (a * b)")
        print("4. Divisi√≥n Normal (a / b)")
        print("5. Divisi√≥n Entera (a // b)")
        print("6. Potencia (a ** b)")
        print("7. Resto de Divisi√≥n (a % b)")
        
        # Pide datos al usuario (operaci√≥n)
        opcion = input("Elige la operaci√≥n (1-7): ")
        
        # Validaci√≥n de la opci√≥n
        if opcion.isdigit() and 1 <= int(opcion) <= 7:
            return int(opcion)
        else:
            print("‚ùå ERROR: Opci√≥n no v√°lida. Por favor, elige un n√∫mero del 1 al 7.")
            # Vuelve a pedir los datos al usuario

def calculadora():
    """
    Funci√≥n principal que contiene el algoritmo de la calculadora.
    """
    continuar = 's'
    
    # Bucle principal: Permite al usuario realizar otra operaci√≥n
    while continuar.lower() == 's':
        
        # 1. Pide la operaci√≥n
        opcion = obtener_operacion()
        
        # 2. Pide los dos operandos
        num1 = pedir_operando("Introduce el primer n√∫mero (a): ")
        
        # L√≥gica especial para la divisi√≥n (manejo de divisi√≥n por cero)
        if opcion in [4, 5, 7]:
            while True:
                num2 = pedir_operando("Introduce el segundo n√∫mero (b): ")
                # Manejo de error: divisi√≥n por cero
                if num2 == 0:
                    # Informa al usuario y pide que elija otro n√∫mero
                    print("üö´ ERROR: No se puede dividir por cero. Por favor, introduce un divisor diferente.")
                    # Vuelve a pedir los datos al usuario (el bucle while True lo hace)
                else:
                    break # Sale del bucle de validaci√≥n si num2 es v√°lido
        else:
            # Para operaciones sin riesgo de divisi√≥n por cero
            num2 = pedir_operando("Introduce el segundo n√∫mero (b): ")

        # 3. Realiza y ense√±a el resultado (Manejo de las operaciones)
        resultado = None
        operacion_str = ""
        
        if opcion == 1:
            resultado = num1 + num2
            operacion_str = f"{num1} + {num2}"
        elif opcion == 2:
            resultado = num1 - num2
            operacion_str = f"{num1} - {num2}"
        elif opcion == 3:
            resultado = num1 * num2
            operacion_str = f"{num1} * {num2}"
        elif opcion == 4:
            resultado = num1 / num2
            operacion_str = f"{num1} / {num2}"
        elif opcion == 5:
            # Asegura que la divisi√≥n entera trabaje con enteros si es posible
            resultado = int(num1) // int(num2)
            operacion_str = f"{num1} // {num2}"
        elif opcion == 6:
            resultado = num1 ** num2
            operacion_str = f"{num1} ** {num2}"
        elif opcion == 7:
            # Asegura que el m√≥dulo trabaje con enteros si es posible
            resultado = int(num1) % int(num2)
            operacion_str = f"{num1} % {num2}"
        
        # Ense√±a el resultado al usuario
        print(f"\n‚úÖ El resultado de la operaci√≥n: {operacion_str} es = **{resultado}**")
        
        # 4. Opci√≥n para seguir
        print("\n------------------------------------")
        continuar = input("¬øQuieres realizar otra operaci√≥n? (s/n): ")
        print("------------------------------------")

    print("\nüëã ¬°Gracias por usar la calculadora! Hasta pronto.")


if __name__ == "__main__":
    calculadora()